<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bc-support.github.io/</id><title>BatAndCat Support</title><subtitle>BatAndCat PHL openMHA hearing</subtitle> <updated>2023-07-24T11:44:34-04:00</updated> <author> <name>Nick Michael</name> <uri>https://bc-support.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://bc-support.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://bc-support.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 Nick Michael </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>BLE control interface</title><link href="https://bc-support.github.io/posts/BLE/" rel="alternate" type="text/html" title="BLE control interface" /><published>2023-07-24T00:00:00-04:00</published> <updated>2023-07-24T00:00:00-04:00</updated> <id>https://bc-support.github.io/posts/BLE/</id> <content src="https://bc-support.github.io/posts/BLE/" /> <author> <name>Nick Michael</name> </author> <summary> The normal interface to the PHL is through a WiFi connection using the TCP/IP protocol. The PHL also has a BLE interface with an corresponding PC program that functions as an example of how a BLE interface could be developed for the PHL system. In the latest PHL images there’s a problem with the interface - a Node.js version issue. Until a more permanent fix is available, it’s possible to get t... </summary> </entry> <entry><title>Example EMA system</title><link href="https://bc-support.github.io/posts/EMA/" rel="alternate" type="text/html" title="Example EMA system" /><published>2023-04-18T00:00:00-04:00</published> <updated>2023-04-18T08:52:38-04:00</updated> <id>https://bc-support.github.io/posts/EMA/</id> <content src="https://bc-support.github.io/posts/EMA/" /> <author> <name>Nick Michael</name> </author> <summary> The PHL has the capability to serve as an Ecological Momentary Assesment system that can capture real-time data from subjects as they go about their daily lives. The very basic system described here shows a few simple techniques that can serve as a starting point for development of an EMA for specific research areas. This example also shows how to play .wav files stored on the PHL, a function t... </summary> </entry> <entry><title>Using the Apple Watch as a PHL Interface</title><link href="https://bc-support.github.io/posts/watch/" rel="alternate" type="text/html" title="Using the Apple Watch as a PHL Interface" /><published>2023-01-24T00:00:00-05:00</published> <updated>2023-01-24T09:53:04-05:00</updated> <id>https://bc-support.github.io/posts/watch/</id> <content src="https://bc-support.github.io/posts/watch/" /> <author> <name>Nick Michael</name> </author> <summary> It’s possible to connect an Apple watch to the PHL and then control parameters using the watch screen. The connection is via WiFi and it takes a few slightly inconvenient work arounds, but it is possible to replace the phone or computer with this smaller interface device. Apple Watch browser When using the Node Red interface from a computer or phone the GUI is accessed by opening a browser and... </summary> </entry> <entry><title>Mic Array using the Connection Square</title><link href="https://bc-support.github.io/posts/Mic-Array-with-Connection-Square/" rel="alternate" type="text/html" title="Mic Array using the Connection Square" /><published>2022-12-09T00:00:00-05:00</published> <updated>2022-12-09T00:00:00-05:00</updated> <id>https://bc-support.github.io/posts/Mic-Array-with-Connection-Square/</id> <content src="https://bc-support.github.io/posts/Mic-Array-with-Connection-Square/" /> <author> <name>Nick Michael</name> </author> <summary> By using the Connection Square with the PHL it’s possible to create systems with experimental mic and speaker configuratons for the PHL. Connection Square Basics When connected to the PHL, the Connection Square provides convenient access to the inputs and outputs of the onboard codecs. Custom transducers can then be used to run using the openMHA platform. Mic Array example A 6 microphone ... </summary> </entry> <entry><title>Controlling the LED</title><link href="https://bc-support.github.io/posts/Controlling-the-LEDs/" rel="alternate" type="text/html" title="Controlling the LED" /><published>2022-11-14T00:00:00-05:00</published> <updated>2022-11-14T10:12:01-05:00</updated> <id>https://bc-support.github.io/posts/Controlling-the-LEDs/</id> <content src="https://bc-support.github.io/posts/Controlling-the-LEDs/" /> <author> <name>Nick Michael</name> </author> <summary> This guide to controlling the LED on the PHL is courtesy of Hendrik Kayser, who knows the PHL inside and out. The push button is also used here to switch things on and off. The basic ideas are as follows: The LED is at ‘/sys/class/gpio/gpio49/value’ Send a 0 or 1 here to turn it OFF or ON. echo 0 /sys/class/gpio/gpio49/value # turn LED OFF echo 1 /sys/class/gpio/gpio49/value # turn LE... </summary> </entry> </feed>
